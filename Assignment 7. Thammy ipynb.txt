{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "cc048121",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sqlite3 as sql"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0967bcaf",
   "metadata": {},
   "outputs": [],
   "source": [
    "db_path = r'C:\\Users\\Icy\\Documents\\School-GMU\\SocialNetwork.db' "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fd031815",
   "metadata": {},
   "outputs": [],
   "source": [
    "conn = sql.connect(db_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ce186d7f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'sqlite3.Connection'>\n"
     ]
    }
   ],
   "source": [
    "print( type(conn) )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "1607d8d6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CREATE TABLE event (  e_ID int,  u_ID int NOT NULL,  topic varchar(15),  day numeric(4,0),  month numeric(4,0),  primary key (e_ID) );\n"
     ]
    }
   ],
   "source": [
    "create_table_query = 'CREATE TABLE event ( ' #here I am creating a table which is being references by another table\n",
    "create_table_query += ' e_ID int, '\n",
    "create_table_query += ' u_ID int NOT NULL, '\n",
    "create_table_query += ' topic varchar(15), '\n",
    "create_table_query += ' day numeric(4,0), '\n",
    "create_table_query += ' month numeric(4,0), '\n",
    "create_table_query += ' primary key (e_ID) '\n",
    "create_table_query += ');'\n",
    "\n",
    "print(create_table_query) #here I am printing what I am trying to do with this query. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "c142d0c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( create_table_query ) #the change is only made after I use this. Conn stands for connect"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "22d8b631",
   "metadata": {},
   "outputs": [],
   "source": [
    "conn.commit() #here I am commiting the changes to the disk. It's not neeeded to do this everysingle time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "d19f516b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CREATE TABLE participates (  u_ID int NOT NULL,  e_ID int NOT NULL,  primary key (u_ID, e_ID),  foreign key (u_ID) references user ON DELETE NO ACTION,  foreign key (e_ID) references event ON DELETE CASCADE );\n"
     ]
    }
   ],
   "source": [
    "create_table_query = 'CREATE TABLE participates ( ' #here Im creating a table which references 2 different tables\n",
    "create_table_query += ' u_ID int NOT NULL, '\n",
    "create_table_query += ' e_ID int NOT NULL, '\n",
    "create_table_query += ' primary key (u_ID, e_ID), '\n",
    "create_table_query += ' foreign key (u_ID) references user ON DELETE NO ACTION, '\n",
    "create_table_query += ' foreign key (e_ID) references event ON DELETE CASCADE '\n",
    "create_table_query += ');'\n",
    "\n",
    "print(create_table_query)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "9ed6b277",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "OperationalError",
     "evalue": "table participates already exists",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mOperationalError\u001b[0m                          Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_24452/3308254580.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mcursor\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mconn\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[1;33m(\u001b[0m \u001b[0mcreate_table_query\u001b[0m \u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mOperationalError\u001b[0m: table participates already exists"
     ]
    }
   ],
   "source": [
    "cursor = conn.execute( create_table_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "efb0ef4b",
   "metadata": {},
   "outputs": [],
   "source": [
    "conn.commit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "40cdc4bb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CREATE TABLE user (  u_ID int,  follower_ID int,  e_ID int,  username varchar(15) NOT NULL,  birthyear int,  primary key (u_ID) );\n"
     ]
    }
   ],
   "source": [
    "create_table_query = 'CREATE TABLE user ( '\n",
    "create_table_query += ' u_ID int, '\n",
    "create_table_query += ' follower_ID int, ' \n",
    "create_table_query += ' e_ID int, '\n",
    "create_table_query += ' username varchar(15) NOT NULL, '\n",
    "create_table_query += ' birthyear int, '\n",
    "create_table_query += ' primary key (u_ID) '\n",
    "create_table_query += ');'\n",
    "\n",
    "print(create_table_query)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0a399f5c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#the primary key from the schema \"follows\" is added to this because both tables share a many-to-many relationship \n",
    "#similarly, the primary key from \"participates\" is also added to this table\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "1c0491ab",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( create_table_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "5ccae058",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CREATE TABLE follows (  u_ID int NOT NULL,  follower_ID int NOT NULL,  primary key (u_ID, follower_ID),  foreign key (u_ID) references user ON DELETE NO ACTION,  foreign key (follower_ID) references user ON DELETE CASCADE );\n"
     ]
    }
   ],
   "source": [
    "create_table_query = 'CREATE TABLE follows ( '\n",
    "create_table_query += ' u_ID int NOT NULL, '\n",
    "create_table_query += ' follower_ID int NOT NULL, '\n",
    "create_table_query += ' primary key (u_ID, follower_ID), '\n",
    "create_table_query += ' foreign key (u_ID) references user ON DELETE NO ACTION, '\n",
    "create_table_query += ' foreign key (follower_ID) references user ON DELETE CASCADE '\n",
    "create_table_query += ');'\n",
    "\n",
    "print(create_table_query)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "f5fd60d6",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "OperationalError",
     "evalue": "table follows already exists",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mOperationalError\u001b[0m                          Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_24452/3308254580.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mcursor\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mconn\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[1;33m(\u001b[0m \u001b[0mcreate_table_query\u001b[0m \u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mOperationalError\u001b[0m: table follows already exists"
     ]
    }
   ],
   "source": [
    "cursor = conn.execute( create_table_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "730649f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "conn.commit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "bb31582c",
   "metadata": {},
   "outputs": [],
   "source": [
    "query = \"SELECT * FROM follows;\"\n",
    "df = pd.read_sql_query(query, conn) #here I am just visualizing how my table looks and if they worked fine."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "7067ca51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>u_ID</th>\n",
       "      <th>follower_ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [u_ID, follower_ID]\n",
       "Index: []"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "cd6b3217",
   "metadata": {},
   "outputs": [],
   "source": [
    "query = \"SELECT * FROM participates;\"\n",
    "df = pd.read_sql_query(query, conn) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "856d69d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>u_ID</th>\n",
       "      <th>e_ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [u_ID, e_ID]\n",
       "Index: []"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df #The tables are empty because I haven't added anything yet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "2a41ffd8",
   "metadata": {},
   "outputs": [],
   "source": [
    "query = \"SELECT * FROM event;\"\n",
    "df = pd.read_sql_query(query, conn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "f3082e5c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>e_ID</th>\n",
       "      <th>u_ID</th>\n",
       "      <th>topic</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [e_ID, u_ID, topic, day, month]\n",
       "Index: []"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "3b3252be",
   "metadata": {},
   "outputs": [],
   "source": [
    "query = \"SELECT * FROM user;\"\n",
    "df = pd.read_sql_query(query, conn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "29ccbaba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>u_ID</th>\n",
       "      <th>follower_ID</th>\n",
       "      <th>e_ID</th>\n",
       "      <th>username</th>\n",
       "      <th>birthyear</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [u_ID, follower_ID, e_ID, username, birthyear]\n",
       "Index: []"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3cf3f1d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Below I am starting to add tuples into my table. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "10906c6e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO event VALUES (16, 16, 'Birthdays', 15,06);\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO event VALUES (\"\n",
    "insert_data_query += \"16, \"\n",
    "insert_data_query += \"16, \"\n",
    "insert_data_query += \"'Birthdays', \"\n",
    "insert_data_query += \"15,\"\n",
    "insert_data_query += \"06\"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "7c360417",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "IntegrityError",
     "evalue": "UNIQUE constraint failed: event.e_ID",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mIntegrityError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_24452/335869828.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mcursor\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mconn\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[1;33m(\u001b[0m \u001b[0minsert_data_query\u001b[0m \u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mIntegrityError\u001b[0m: UNIQUE constraint failed: event.e_ID"
     ]
    }
   ],
   "source": [
    "cursor = conn.execute( insert_data_query ) #the changes are not execute until I use this"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "id": "9e041c3b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO participates VALUES (16, 16 );\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO participates VALUES (\"\n",
    "insert_data_query += \"16, \"\n",
    "insert_data_query += \"16 \"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "id": "9ae8528b",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "6e80f08c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO user VALUES (16, 16, 16, 'tammybee', 1988);\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO user VALUES (\"\n",
    "insert_data_query += \"16, \"\n",
    "insert_data_query += \"16, \"\n",
    "insert_data_query += \"16, \"\n",
    "insert_data_query += \"'tammybee', \"\n",
    "insert_data_query += \"1988\"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "fa72981f",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "7fa2fdd5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO follows VALUES (16, 160 );\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO follows VALUES (\"\n",
    "insert_data_query += \"16, \"\n",
    "insert_data_query += \"160 \"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "0e4bd62d",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "IntegrityError",
     "evalue": "UNIQUE constraint failed: follows.u_ID, follows.follower_ID",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mIntegrityError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_24452/335869828.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mcursor\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mconn\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[1;33m(\u001b[0m \u001b[0minsert_data_query\u001b[0m \u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mIntegrityError\u001b[0m: UNIQUE constraint failed: follows.u_ID, follows.follower_ID"
     ]
    }
   ],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 427,
   "id": "40eaac9a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO event VALUES (18, 18, 'Birthdays', 11, 02 );\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO event VALUES (\"\n",
    "insert_data_query += \"18, \"\n",
    "insert_data_query += \"18, \"\n",
    "insert_data_query += \"'Beer', \"\n",
    "insert_data_query += \"11, \"\n",
    "insert_data_query += \"02 \"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 428,
   "id": "80dee168",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "OperationalError",
     "evalue": "table event has 7 columns but 5 values were supplied",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mOperationalError\u001b[0m                          Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_24452/335869828.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mcursor\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mconn\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[1;33m(\u001b[0m \u001b[0minsert_data_query\u001b[0m \u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mOperationalError\u001b[0m: table event has 7 columns but 5 values were supplied"
     ]
    }
   ],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 300,
   "id": "374162b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO event VALUES (20, 20, 'Wine', 08, 06);\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO event VALUES (\"\n",
    "insert_data_query += \"20, \"\n",
    "insert_data_query += \"20, \"\n",
    "insert_data_query += \"'Wine', \"\n",
    "insert_data_query += \"08, \"\n",
    "insert_data_query += \"06\"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 301,
   "id": "d7d2e2f5",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "IntegrityError",
     "evalue": "UNIQUE constraint failed: event.e_ID",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mIntegrityError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_24452/335869828.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mcursor\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mconn\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[1;33m(\u001b[0m \u001b[0minsert_data_query\u001b[0m \u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mIntegrityError\u001b[0m: UNIQUE constraint failed: event.e_ID"
     ]
    }
   ],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "684623fc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO event VALUES (22, 22, 'Parties', 10, 12);\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO event VALUES (\"\n",
    "insert_data_query += \"22, \"\n",
    "insert_data_query += \"22, \"\n",
    "insert_data_query += \"'Parties', \"\n",
    "insert_data_query += \"10, \"\n",
    "insert_data_query += \"12\"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "70456fd9",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "ec078529",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO event VALUES (24, 24, 'Houses', 14, 17);\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO event VALUES (\"\n",
    "insert_data_query += \"24, \"\n",
    "insert_data_query += \"24, \"\n",
    "insert_data_query += \"'Houses', \"\n",
    "insert_data_query += \"14, \"\n",
    "insert_data_query += \"17\"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "e9a4450b",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 302,
   "id": "db002b08",
   "metadata": {},
   "outputs": [],
   "source": [
    "query = \"SELECT * FROM event;\"\n",
    "df = pd.read_sql_query(query, conn) #after inserting 5 new tuples into the table, checking to see everything in the table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 303,
   "id": "8ee28723",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>e_ID</th>\n",
       "      <th>u_ID</th>\n",
       "      <th>topic</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>Birthdays</td>\n",
       "      <td>15</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>Wine</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>Beer</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>Parties</td>\n",
       "      <td>10</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>Houses</td>\n",
       "      <td>14</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   e_ID  u_ID      topic  day  month\n",
       "0    16    16  Birthdays   15      6\n",
       "1    20    20       Wine    8      6\n",
       "2    18    18       Beer   11      2\n",
       "3    22    22    Parties   10     12\n",
       "4    24    24     Houses   14     17"
      ]
     },
     "execution_count": 303,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df #df stands for data frame. Here the results are shown more like a table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 277,
   "id": "3c320da0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO participates VALUES (20, 20 );\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO participates VALUES (\"\n",
    "insert_data_query += \"20, \"\n",
    "insert_data_query += \"20 \"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "id": "33c616fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "id": "3f204521",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO participates VALUES (18, 18 );\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO participates VALUES (\"\n",
    "insert_data_query += \"18, \"\n",
    "insert_data_query += \"18 \"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "id": "720365b7",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 281,
   "id": "f7bba24b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO participates VALUES (22, 22 );\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO participates VALUES (\"\n",
    "insert_data_query += \"22, \"\n",
    "insert_data_query += \"22 \"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 282,
   "id": "e837f5d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "id": "28482f4e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO participates VALUES (24, 24 );\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO participates VALUES (\"\n",
    "insert_data_query += \"24, \"\n",
    "insert_data_query += \"24 \"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "id": "943f9668",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 285,
   "id": "57ff4bbc",
   "metadata": {},
   "outputs": [],
   "source": [
    "query = \"SELECT * FROM participates;\"\n",
    "df = pd.read_sql_query(query, conn) #5 new tuples inserted into the table. Checking to see if everything worked"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 286,
   "id": "afeda2d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>u_ID</th>\n",
       "      <th>e_ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   u_ID  e_ID\n",
       "0    16    16\n",
       "1    20    20\n",
       "2    18    18\n",
       "3    22    22\n",
       "4    24    24"
      ]
     },
     "execution_count": 286,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "7d01259c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO user VALUES (18, 18, 18, 'crex', 1988);\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO user VALUES (\"\n",
    "insert_data_query += \"18, \"\n",
    "insert_data_query += \"18, \"\n",
    "insert_data_query += \"18, \"\n",
    "insert_data_query += \"'crex', \"\n",
    "insert_data_query += \"1988\"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "cdff9beb",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query ) #This is used so the query can be executed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "484a4d48",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO user VALUES (20, 20, 20, 'ncarmona', 1957);\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO user VALUES (\"\n",
    "insert_data_query += \"20, \"\n",
    "insert_data_query += \"20, \"\n",
    "insert_data_query += \"20, \"\n",
    "insert_data_query += \"'ncarmona', \"\n",
    "insert_data_query += \"1957\"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "165fd819",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "id": "3a20a7e0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO user VALUES (22, 22, 22, 'Jbarbosa', 1961);\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO user VALUES (\"\n",
    "insert_data_query += \"22, \"\n",
    "insert_data_query += \"22, \"\n",
    "insert_data_query += \"22, \"\n",
    "insert_data_query += \"'Jbarbosa', \"\n",
    "insert_data_query += \"1961\"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "52ea5cb4",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "id": "2578bd56",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO user VALUES (24, 24, 24, 'Jrex', 1956);\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO user VALUES (\"\n",
    "insert_data_query += \"24, \"\n",
    "insert_data_query += \"24, \"\n",
    "insert_data_query += \"24, \"\n",
    "insert_data_query += \"'Jrex', \"\n",
    "insert_data_query += \"1956\"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "id": "4e8d8d43",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "id": "d63f45ae",
   "metadata": {},
   "outputs": [],
   "source": [
    "query = \"SELECT * FROM user;\"\n",
    "df = pd.read_sql_query(query, conn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "id": "3bf8e7a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>u_ID</th>\n",
       "      <th>follower_ID</th>\n",
       "      <th>e_ID</th>\n",
       "      <th>username</th>\n",
       "      <th>birthyear</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>tammybee</td>\n",
       "      <td>1988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>crex</td>\n",
       "      <td>1988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>ncarmona</td>\n",
       "      <td>1957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>Jbarbosa</td>\n",
       "      <td>1961</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>Jrex</td>\n",
       "      <td>1956</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   u_ID  follower_ID  e_ID  username  birthyear\n",
       "0    16           16    16  tammybee       1988\n",
       "1    18           18    18      crex       1988\n",
       "2    20           20    20  ncarmona       1957\n",
       "3    22           22    22  Jbarbosa       1961\n",
       "4    24           24    24      Jrex       1956"
      ]
     },
     "execution_count": 206,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df #df corresponds to the location on the disk. I could have used df1 or df2 ..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "id": "5b244233",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO follows VALUES (18, 180 );\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO follows VALUES (\"\n",
    "insert_data_query += \"18, \"\n",
    "insert_data_query += \"180 \"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "id": "b3b5c77f",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "id": "497deae2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO follows VALUES (20, 200 );\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO follows VALUES (\"\n",
    "insert_data_query += \"20, \"\n",
    "insert_data_query += \"200 \"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "id": "8d75f07c",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "id": "676f0eac",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO follows VALUES (22, 220 );\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO follows VALUES (\"\n",
    "insert_data_query += \"22, \"\n",
    "insert_data_query += \"220 \"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "id": "12a6c8c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "id": "dfa45cfd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INSERT INTO follows VALUES (24, 240 );\n"
     ]
    }
   ],
   "source": [
    "insert_data_query = \"INSERT INTO follows VALUES (\"\n",
    "insert_data_query += \"24, \"\n",
    "insert_data_query += \"240 \"\n",
    "insert_data_query += \");\"\n",
    "\n",
    "print( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "id": "d448b0b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( insert_data_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "id": "5ffd2ad4",
   "metadata": {},
   "outputs": [],
   "source": [
    "query = \"SELECT * FROM follows;\"\n",
    "df = pd.read_sql_query(query, conn) #checking to see everything on the table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "id": "6a8611a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>u_ID</th>\n",
       "      <th>follower_ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>16</td>\n",
       "      <td>160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18</td>\n",
       "      <td>180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20</td>\n",
       "      <td>200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>22</td>\n",
       "      <td>220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>24</td>\n",
       "      <td>240</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   u_ID  follower_ID\n",
       "0    16           16\n",
       "1    16          160\n",
       "2    18          180\n",
       "3    20          200\n",
       "4    22          220\n",
       "5    24          240"
      ]
     },
     "execution_count": 216,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6867032",
   "metadata": {},
   "source": [
    "Insert 15 random pairs of (user id, event id) in the Table Participates.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "id": "08b17fd0",
   "metadata": {},
   "outputs": [],
   "source": [
    "users_ID = [34, 35, 46, 52, 72, 73, 97, 76, 34, 65, 43, 41, 38, 98, 56]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 292,
   "id": "d1621923",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Already exists 18 18\n",
      "Already exists 20 21\n",
      "Already exists 18 18\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "\n",
    "#here I am adding random values to the table participates. This is known as a for loop where data is added in a loop\n",
    "\n",
    "for i in range(15):\n",
    "\n",
    "\n",
    "   u_id = str(i)\n",
    "   \n",
    "   random_user= random.randint(16, 24) \n",
    "   u_ID = str(random_user)\n",
    "\n",
    "   random_e_ID = random.randint(16,24) \n",
    "   e_ID = str (random_e_ID)\n",
    "\n",
    "   insert_data_query = \"INSERT INTO participates VALUES ( \"\n",
    "   insert_data_query += u_ID +\", \"\n",
    "   insert_data_query += e_ID\n",
    "   insert_data_query += \");\"\n",
    "    \n",
    "\n",
    "   try: cursor = conn.execute(insert_data_query) \n",
    "   except: print (\"Already exists\",u_ID,e_ID)\n",
    "    \n",
    "\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 272,
   "id": "35d50647",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor = conn.execute( 'DELETE FROM participates;' ) #if I execute this, everything from the table is deleted but not the table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 294,
   "id": "10d79371",
   "metadata": {},
   "outputs": [],
   "source": [
    "query = \"SELECT * FROM participates;\"\n",
    "df = pd.read_sql_query(query, conn) #here I am checking if everything was added successfully"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 295,
   "id": "92559460",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>u_ID</th>\n",
       "      <th>e_ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>23</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>19</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>16</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>18</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>21</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>17</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>20</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>18</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>21</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>23</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    u_ID  e_ID\n",
       "0     16    16\n",
       "1     20    20\n",
       "2     18    18\n",
       "3     22    22\n",
       "4     24    24\n",
       "5     20    16\n",
       "6     23    17\n",
       "7     19    20\n",
       "8     16    17\n",
       "9     18    20\n",
       "10    21    17\n",
       "11    17    16\n",
       "12    20    21\n",
       "13    18    23\n",
       "14    21    22\n",
       "15    23    19\n",
       "16    21    16"
      ]
     },
     "execution_count": 295,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6498444e",
   "metadata": {},
   "source": [
    "Submit a query to your database that returns the username and birthyear\n",
    "of a user, as well as the event topic, day and month, for all the users\n",
    "that participated in events. (If a user participated in multiple events,\n",
    "she will have multiple records in the result with her user information,\n",
    "but different event information.)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 306,
   "id": "c5ca5c02",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('tammybee', 1988, 'Birthdays', 15, 6), ('crex', 1988, 'Beer', 11, 2), ('ncarmona', 1957, 'Wine', 8, 6), ('Jbarbosa', 1961, 'Parties', 10, 12), ('Jrex', 1956, 'Houses', 14, 17)]\n"
     ]
    }
   ],
   "source": [
    "query = 'SELECT username, birthyear, topic, day, month '\n",
    "query +='FROM user NATURAL JOIN participates NATURAL JOIN event;'\n",
    "result = conn.execute( query )\n",
    "\n",
    "print( result.fetchall() ) #here I am just printing the query but not commiting it to the disk"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 307,
   "id": "ad6e3085",
   "metadata": {},
   "outputs": [],
   "source": [
    "# adding a new colunm to the table user called lat\n",
    "alter_query = 'ALTER TABLE user ADD COLUMN lat REAL;'\n",
    "cursor = conn.execute( alter_query )\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "id": "6491585b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# adding a new colunm to the table user called lon\n",
    "alter_query = 'ALTER TABLE user ADD COLUMN lon REAL;'\n",
    "cursor = conn.execute( alter_query )\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 309,
   "id": "d22e85a7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>u_ID</th>\n",
       "      <th>follower_ID</th>\n",
       "      <th>e_ID</th>\n",
       "      <th>username</th>\n",
       "      <th>birthyear</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>tammybee</td>\n",
       "      <td>1988</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>crex</td>\n",
       "      <td>1988</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>ncarmona</td>\n",
       "      <td>1957</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>Jbarbosa</td>\n",
       "      <td>1961</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>Jrex</td>\n",
       "      <td>1956</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   u_ID  follower_ID  e_ID  username  birthyear   lat   lon\n",
       "0    16           16    16  tammybee       1988  None  None\n",
       "1    18           18    18      crex       1988  None  None\n",
       "2    20           20    20  ncarmona       1957  None  None\n",
       "3    22           22    22  Jbarbosa       1961  None  None\n",
       "4    24           24    24      Jrex       1956  None  None"
      ]
     },
     "execution_count": 309,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_sql_query('SELECT * FROM user;', conn)\n",
    "df.head()\n",
    "\n",
    "#here the new colunms were created but since there are no values, it shows as none for each tuple. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 310,
   "id": "3b385479",
   "metadata": {},
   "outputs": [],
   "source": [
    "# adding a new colunm to the table event called elat\n",
    "alter_query = 'ALTER TABLE event ADD COLUMN elat REAL;'\n",
    "cursor = conn.execute( alter_query )\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 311,
   "id": "98492d75",
   "metadata": {},
   "outputs": [],
   "source": [
    "# adding a new colunm to the table user called lon\n",
    "alter_query = 'ALTER TABLE event ADD COLUMN elon REAL;'\n",
    "cursor = conn.execute( alter_query )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 312,
   "id": "cd888f9f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>e_ID</th>\n",
       "      <th>u_ID</th>\n",
       "      <th>topic</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>elat</th>\n",
       "      <th>elon</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>Birthdays</td>\n",
       "      <td>15</td>\n",
       "      <td>6</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>Wine</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>Beer</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>Parties</td>\n",
       "      <td>10</td>\n",
       "      <td>12</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>Houses</td>\n",
       "      <td>14</td>\n",
       "      <td>17</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   e_ID  u_ID      topic  day  month  elat  elon\n",
       "0    16    16  Birthdays   15      6  None  None\n",
       "1    20    20       Wine    8      6  None  None\n",
       "2    18    18       Beer   11      2  None  None\n",
       "3    22    22    Parties   10     12  None  None\n",
       "4    24    24     Houses   14     17  None  None"
      ]
     },
     "execution_count": 312,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_sql_query('SELECT * FROM event;', conn)\n",
    "df.head()\n",
    "\n",
    "#here the new colunms were created as well but since there are no values, it shows as none for each tuple. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "acb0c2ca",
   "metadata": {},
   "source": [
    "Insert random values for the latitude and longitude of each user.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 459,
   "id": "3edce8fa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "UPDATE user SET lat = -106.191, lon = 38.125 WHERE u_id = 16;\n",
      "UPDATE user SET lat = -86.879, lon = 32.072 WHERE u_id = 17;\n",
      "UPDATE user SET lat = -81.655, lon = 34.735 WHERE u_id = 18;\n",
      "UPDATE user SET lat = -113.351, lon = 33.319 WHERE u_id = 19;\n",
      "UPDATE user SET lat = -81.484, lon = 39.377 WHERE u_id = 20;\n",
      "UPDATE user SET lat = -77.986, lon = 38.322 WHERE u_id = 21;\n"
     ]
    }
   ],
   "source": [
    "# There are 5 people in the \"user\" table \n",
    "for i in range(6):\n",
    "  lat = random.uniform(-115, -73)\n",
    "  lon = random.uniform(32, 40)\n",
    "\n",
    "  # The numbers are rounded to a precision of 3 decimal digits\n",
    "\n",
    "  lat = round(lat, 3)\n",
    "  lon = round(lon, 3)\n",
    "\n",
    "  update_query = 'UPDATE user SET '\n",
    "  update_query += 'lat = ' + str(lat) + ', '\n",
    "  update_query += 'lon = ' + str(lon) + ' '\n",
    "  update_query += 'WHERE u_id = ' + str(16 + i ) + ';' #this allows diff random values to be added to each tuple\n",
    "\n",
    "\n",
    "    \n",
    " #This will update random values for latitudes and longitudes in the table.  \n",
    "\n",
    "  print(update_query)\n",
    "    \n",
    "  cursor = conn.execute( update_query )\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 460,
   "id": "29c423b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>u_ID</th>\n",
       "      <th>follower_ID</th>\n",
       "      <th>e_ID</th>\n",
       "      <th>username</th>\n",
       "      <th>birthyear</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>tammybee</td>\n",
       "      <td>1988</td>\n",
       "      <td>-106.191</td>\n",
       "      <td>38.125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>crex</td>\n",
       "      <td>1988</td>\n",
       "      <td>-81.655</td>\n",
       "      <td>34.735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>ncarmona</td>\n",
       "      <td>1957</td>\n",
       "      <td>-81.484</td>\n",
       "      <td>39.377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>Jbarbosa</td>\n",
       "      <td>1961</td>\n",
       "      <td>-110.083</td>\n",
       "      <td>33.493</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>Jrex</td>\n",
       "      <td>1956</td>\n",
       "      <td>-110.083</td>\n",
       "      <td>33.493</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   u_ID  follower_ID  e_ID  username  birthyear      lat     lon\n",
       "0    16           16    16  tammybee       1988 -106.191  38.125\n",
       "1    18           18    18      crex       1988  -81.655  34.735\n",
       "2    20           20    20  ncarmona       1957  -81.484  39.377\n",
       "3    22           22    22  Jbarbosa       1961 -110.083  33.493\n",
       "4    24           24    24      Jrex       1956 -110.083  33.493"
      ]
     },
     "execution_count": 460,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_sql_query('SELECT * FROM user;', conn)\n",
    "df.head()\n",
    "\n",
    "#now I can confirm that each tuple was updated and it now has a value for the new lat and lon columns. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f1065996",
   "metadata": {},
   "source": [
    "Insert random values for the latitude and longitude of each event."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 461,
   "id": "72550779",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "UPDATE event SET elat = -110.472, elon = 37.143 WHERE e_id = 16;\n",
      "UPDATE event SET elat = -93.846, elon = 37.68 WHERE e_id = 17;\n",
      "UPDATE event SET elat = -98.97, elon = 33.534 WHERE e_id = 18;\n",
      "UPDATE event SET elat = -100.421, elon = 35.056 WHERE e_id = 19;\n",
      "UPDATE event SET elat = -76.095, elon = 34.374 WHERE e_id = 20;\n",
      "UPDATE event SET elat = -88.843, elon = 39.505 WHERE e_id = 21;\n"
     ]
    }
   ],
   "source": [
    "# There are 5 people in the use table \n",
    "for i in range(6):\n",
    " elat = random.uniform(-117, -75)\n",
    " elon = random.uniform(32, 40)\n",
    "\n",
    " # The numbers are rounded to a precision of 3 decimal digits\n",
    " elat = round(elat, 3)\n",
    " elon = round(elon, 3)\n",
    "\n",
    " update_query = 'UPDATE event SET '\n",
    " update_query += 'elat = ' + str(elat) + ', '\n",
    " update_query += 'elon = ' + str(elon) + ' '\n",
    "    \n",
    " update_query += 'WHERE e_id = ' + str(16 + i) + ';'\n",
    "\n",
    " print(update_query)\n",
    " cursor = conn.execute( update_query )\n",
    "\n",
    "#the same thing is being done here and random values of lat and lon are being added to the \"event\" table\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 462,
   "id": "5d46d45c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>e_ID</th>\n",
       "      <th>u_ID</th>\n",
       "      <th>topic</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>elat</th>\n",
       "      <th>elon</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>Birthdays</td>\n",
       "      <td>15</td>\n",
       "      <td>6</td>\n",
       "      <td>-110.472</td>\n",
       "      <td>37.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>Wine</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>-76.095</td>\n",
       "      <td>34.374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>Beer</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>-98.970</td>\n",
       "      <td>33.534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>Parties</td>\n",
       "      <td>10</td>\n",
       "      <td>12</td>\n",
       "      <td>-92.081</td>\n",
       "      <td>34.645</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>Houses</td>\n",
       "      <td>14</td>\n",
       "      <td>17</td>\n",
       "      <td>-92.081</td>\n",
       "      <td>34.645</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   e_ID  u_ID      topic  day  month     elat    elon\n",
       "0    16    16  Birthdays   15      6 -110.472  37.143\n",
       "1    20    20       Wine    8      6  -76.095  34.374\n",
       "2    18    18       Beer   11      2  -98.970  33.534\n",
       "3    22    22    Parties   10     12  -92.081  34.645\n",
       "4    24    24     Houses   14     17  -92.081  34.645"
      ]
     },
     "execution_count": 462,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_sql_query('SELECT * FROM event;', conn) #select * shows me everything in the table\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 463,
   "id": "e3d32903",
   "metadata": {},
   "outputs": [],
   "source": [
    "conn.commit()  #here I am commiting all changes to the disk\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 464,
   "id": "4372b5d5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('tammybee', -106.191, 38.125, 'Birthdays', -110.472, 37.143), ('crex', -81.655, 34.735, 'Beer', -98.97, 33.534), ('ncarmona', -81.484, 39.377, 'Wine', -76.095, 34.374), ('Jbarbosa', -110.083, 33.493, 'Parties', -92.081, 34.645), ('Jrex', -110.083, 33.493, 'Houses', -92.081, 34.645)]\n"
     ]
    }
   ],
   "source": [
    "query = ' SELECT username, lat, lon, topic, elat, elon '\n",
    "query +=' FROM user NATURAL JOIN participates NATURAL JOIN event; '\n",
    "result = conn.execute( query )\n",
    "\n",
    "print( result.fetchall() )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "306e997d",
   "metadata": {},
   "source": [
    "Write a join query that finds all the user named and locations of users,\n",
    "who attended an event, and the id and location of the event. Maintain\n",
    "this result in a dataframe df1. Show df1."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 465,
   "id": "9af5fbba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>username</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "      <th>topic</th>\n",
       "      <th>elat</th>\n",
       "      <th>elon</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>tammybee</td>\n",
       "      <td>-106.191</td>\n",
       "      <td>38.125</td>\n",
       "      <td>Birthdays</td>\n",
       "      <td>-110.472</td>\n",
       "      <td>37.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>crex</td>\n",
       "      <td>-81.655</td>\n",
       "      <td>34.735</td>\n",
       "      <td>Beer</td>\n",
       "      <td>-98.970</td>\n",
       "      <td>33.534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ncarmona</td>\n",
       "      <td>-81.484</td>\n",
       "      <td>39.377</td>\n",
       "      <td>Wine</td>\n",
       "      <td>-76.095</td>\n",
       "      <td>34.374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Jbarbosa</td>\n",
       "      <td>-110.083</td>\n",
       "      <td>33.493</td>\n",
       "      <td>Parties</td>\n",
       "      <td>-92.081</td>\n",
       "      <td>34.645</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Jrex</td>\n",
       "      <td>-110.083</td>\n",
       "      <td>33.493</td>\n",
       "      <td>Houses</td>\n",
       "      <td>-92.081</td>\n",
       "      <td>34.645</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   username      lat     lon      topic     elat    elon\n",
       "0  tammybee -106.191  38.125  Birthdays -110.472  37.143\n",
       "1      crex  -81.655  34.735       Beer  -98.970  33.534\n",
       "2  ncarmona  -81.484  39.377       Wine  -76.095  34.374\n",
       "3  Jbarbosa -110.083  33.493    Parties  -92.081  34.645\n",
       "4      Jrex -110.083  33.493     Houses  -92.081  34.645"
      ]
     },
     "execution_count": 465,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1 = pd.read_sql_query('SELECT username, lat, lon, topic, elat, elon FROM user NATURAL JOIN participates NATURAL JOIN event;', conn)\n",
    "df1 #natural join query combines multiple table that are related to each other"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13e0af0a",
   "metadata": {},
   "source": [
    "Write a query that counts the number of users who participate in each\n",
    "event and shows the event id and user count. Keep the result in another\n",
    "dataframe df2. Show df2."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 466,
   "id": "af0dfe5c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count (u_ID)</th>\n",
       "      <th>e_ID</th>\n",
       "      <th>topic</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>Birthdays</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>Beer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>Wine</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>Parties</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>Houses</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   count (u_ID)  e_ID      topic\n",
       "0             1    16  Birthdays\n",
       "1             1    18       Beer\n",
       "2             1    20       Wine\n",
       "3             1    22    Parties\n",
       "4             1    24     Houses"
      ]
     },
     "execution_count": 466,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2 = pd.read_sql_query('SELECT count (u_ID), e_ID , topic FROM user NATURAL JOIN participates NATURAL JOIN event GROUP BY e_ID;', conn)\n",
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 386,
   "id": "f9a37c59",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count (u_ID)</th>\n",
       "      <th>e_ID</th>\n",
       "      <th>topic</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>Birthdays</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>Beer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>Wine</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>Parties</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>Houses</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   count (u_ID)  e_ID      topic\n",
       "0             1    16  Birthdays\n",
       "1             1    18       Beer\n",
       "2             1    20       Wine\n",
       "3             1    22    Parties\n",
       "4             1    24     Houses"
      ]
     },
     "execution_count": 386,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "query = ' SELECT count (u_ID), e_ID , topic FROM user NATURAL JOIN participates NATURAL JOIN event GROUP BY e_ID; '\n",
    "df2 = pd.read_sql_query(query, conn)\n",
    "df2.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f258acfa",
   "metadata": {},
   "source": [
    "• Calculate the harvesine distance between each user to the event(s) that\n",
    "they participate in, using the coordinates from your query result in df1.\n",
    "Insert those distance values in a new ‘dist’ column in df1.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 467,
   "id": "2ede31b7",
   "metadata": {},
   "outputs": [],
   "source": [
    "from math import sin, cos, sqrt, atan2, radians\n",
    "def harvesine_dist(lat1, lon1, lat2, lon2):\n",
    " R = 6373.0 # approximate radius of earth in km\n",
    " dlon = lon2 - lon1\n",
    " dlat = lat2 - lat1\n",
    " a = sin(dlat / 2)**2 + cos(lat1) * cos(lat2) * sin(dlon / 2)**2\n",
    " c = 2 * atan2(sqrt(a), sqrt(1 - a))\n",
    " distance = R * c\n",
    " return distance\n",
    "#in order to get the havesine, the math packet needs to be imported"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 468,
   "id": "3e3567f4",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'lat'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py\u001b[0m in \u001b[0;36mget_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   3360\u001b[0m             \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3361\u001b[1;33m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3362\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'lat'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_24452/941804940.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[0meLat\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0marray\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'elat'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[0meLon\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0marray\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'elon'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 4\u001b[1;33m \u001b[0mLat\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0marray\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'lat'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      5\u001b[0m \u001b[0mLon\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0marray\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'lon'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3456\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3457\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3458\u001b[1;33m             \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3459\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3460\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py\u001b[0m in \u001b[0;36mget_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   3361\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3362\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3363\u001b[1;33m                 \u001b[1;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3364\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3365\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mis_scalar\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0misna\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mand\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mhasnans\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'lat'"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "eLat = np.array(df['elat'])\n",
    "eLon = np.array(df['elon'])\n",
    "Lat = np.array(df['lat'])\n",
    "Lon = np.array(df['lon'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 349,
   "id": "6d5527fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-86.679"
      ]
     },
     "execution_count": 349,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "elat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 355,
   "id": "7494110d",
   "metadata": {},
   "outputs": [],
   "source": [
    "query = 'SELECT COUNT(*) FROM participates;'\n",
    "result = conn.execute( query )\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 388,
   "id": "a603ea35",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count (u_ID)</th>\n",
       "      <th>e_ID</th>\n",
       "      <th>topic</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>Birthdays</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>Beer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>Wine</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>Parties</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>Houses</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   count (u_ID)  e_ID      topic\n",
       "0             1    16  Birthdays\n",
       "1             1    18       Beer\n",
       "2             1    20       Wine\n",
       "3             1    22    Parties\n",
       "4             1    24     Houses"
      ]
     },
     "execution_count": 388,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1 = pd.read_sql_query(query, conn)\n",
    "df1.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 360,
   "id": "9b09d88f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[12311.91614196848, 12311.91614196848, 12311.91614196848, 12311.91614196848, 12311.91614196848]\n"
     ]
    }
   ],
   "source": [
    "dist_list = []\n",
    "for i in range(len(eLat)):\n",
    " dist = harvesine_dist(eLat[i], eLon[i], Lat[i], Lon[i])\n",
    " dist_list.append(dist)\n",
    "\n",
    "print( dist_list ) \n",
    "#this query gives the harvesine  distance which is the angular distance between two point on earth"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 469,
   "id": "e1c49494",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>e_ID</th>\n",
       "      <th>u_ID</th>\n",
       "      <th>topic</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>elat</th>\n",
       "      <th>elon</th>\n",
       "      <th>follower_ID</th>\n",
       "      <th>username</th>\n",
       "      <th>birthyear</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>Birthdays</td>\n",
       "      <td>15</td>\n",
       "      <td>6</td>\n",
       "      <td>-110.472</td>\n",
       "      <td>37.143</td>\n",
       "      <td>16</td>\n",
       "      <td>tammybee</td>\n",
       "      <td>1988</td>\n",
       "      <td>-106.191</td>\n",
       "      <td>38.125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>Wine</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>-76.095</td>\n",
       "      <td>34.374</td>\n",
       "      <td>20</td>\n",
       "      <td>ncarmona</td>\n",
       "      <td>1957</td>\n",
       "      <td>-81.484</td>\n",
       "      <td>39.377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>Beer</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>-98.970</td>\n",
       "      <td>33.534</td>\n",
       "      <td>18</td>\n",
       "      <td>crex</td>\n",
       "      <td>1988</td>\n",
       "      <td>-81.655</td>\n",
       "      <td>34.735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>Parties</td>\n",
       "      <td>10</td>\n",
       "      <td>12</td>\n",
       "      <td>-92.081</td>\n",
       "      <td>34.645</td>\n",
       "      <td>22</td>\n",
       "      <td>Jbarbosa</td>\n",
       "      <td>1961</td>\n",
       "      <td>-110.083</td>\n",
       "      <td>33.493</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>Houses</td>\n",
       "      <td>14</td>\n",
       "      <td>17</td>\n",
       "      <td>-92.081</td>\n",
       "      <td>34.645</td>\n",
       "      <td>24</td>\n",
       "      <td>Jrex</td>\n",
       "      <td>1956</td>\n",
       "      <td>-110.083</td>\n",
       "      <td>33.493</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   e_ID  u_ID      topic  day  month     elat    elon  follower_ID  username  \\\n",
       "0    16    16  Birthdays   15      6 -110.472  37.143           16  tammybee   \n",
       "1    20    20       Wine    8      6  -76.095  34.374           20  ncarmona   \n",
       "2    18    18       Beer   11      2  -98.970  33.534           18      crex   \n",
       "3    22    22    Parties   10     12  -92.081  34.645           22  Jbarbosa   \n",
       "4    24    24     Houses   14     17  -92.081  34.645           24      Jrex   \n",
       "\n",
       "   birthyear      lat     lon  \n",
       "0       1988 -106.191  38.125  \n",
       "1       1957  -81.484  39.377  \n",
       "2       1988  -81.655  34.735  \n",
       "3       1961 -110.083  33.493  \n",
       "4       1956 -110.083  33.493  "
      ]
     },
     "execution_count": 469,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "query = 'SELECT * FROM event natural join user natural join participates; '\n",
    "df1 = pd.read_sql_query(query, conn)\n",
    "df1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 470,
   "id": "159bed17",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>e_ID</th>\n",
       "      <th>u_ID</th>\n",
       "      <th>topic</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>elat</th>\n",
       "      <th>elon</th>\n",
       "      <th>follower_ID</th>\n",
       "      <th>username</th>\n",
       "      <th>birthyear</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "      <th>distance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>Birthdays</td>\n",
       "      <td>15</td>\n",
       "      <td>6</td>\n",
       "      <td>-110.472</td>\n",
       "      <td>37.143</td>\n",
       "      <td>16</td>\n",
       "      <td>tammybee</td>\n",
       "      <td>1988</td>\n",
       "      <td>-106.191</td>\n",
       "      <td>38.125</td>\n",
       "      <td>12311.916142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>Wine</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>-76.095</td>\n",
       "      <td>34.374</td>\n",
       "      <td>20</td>\n",
       "      <td>ncarmona</td>\n",
       "      <td>1957</td>\n",
       "      <td>-81.484</td>\n",
       "      <td>39.377</td>\n",
       "      <td>12311.916142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>Beer</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>-98.970</td>\n",
       "      <td>33.534</td>\n",
       "      <td>18</td>\n",
       "      <td>crex</td>\n",
       "      <td>1988</td>\n",
       "      <td>-81.655</td>\n",
       "      <td>34.735</td>\n",
       "      <td>12311.916142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>Parties</td>\n",
       "      <td>10</td>\n",
       "      <td>12</td>\n",
       "      <td>-92.081</td>\n",
       "      <td>34.645</td>\n",
       "      <td>22</td>\n",
       "      <td>Jbarbosa</td>\n",
       "      <td>1961</td>\n",
       "      <td>-110.083</td>\n",
       "      <td>33.493</td>\n",
       "      <td>12311.916142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>Houses</td>\n",
       "      <td>14</td>\n",
       "      <td>17</td>\n",
       "      <td>-92.081</td>\n",
       "      <td>34.645</td>\n",
       "      <td>24</td>\n",
       "      <td>Jrex</td>\n",
       "      <td>1956</td>\n",
       "      <td>-110.083</td>\n",
       "      <td>33.493</td>\n",
       "      <td>12311.916142</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   e_ID  u_ID      topic  day  month     elat    elon  follower_ID  username  \\\n",
       "0    16    16  Birthdays   15      6 -110.472  37.143           16  tammybee   \n",
       "1    20    20       Wine    8      6  -76.095  34.374           20  ncarmona   \n",
       "2    18    18       Beer   11      2  -98.970  33.534           18      crex   \n",
       "3    22    22    Parties   10     12  -92.081  34.645           22  Jbarbosa   \n",
       "4    24    24     Houses   14     17  -92.081  34.645           24      Jrex   \n",
       "\n",
       "   birthyear      lat     lon      distance  \n",
       "0       1988 -106.191  38.125  12311.916142  \n",
       "1       1957  -81.484  39.377  12311.916142  \n",
       "2       1988  -81.655  34.735  12311.916142  \n",
       "3       1961 -110.083  33.493  12311.916142  \n",
       "4       1956 -110.083  33.493  12311.916142  "
      ]
     },
     "execution_count": 470,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1['distance'] = dist_list\n",
    "df1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "34a49057",
   "metadata": {},
   "outputs": [],
   "source": [
    "#The above distance corresponds to the distance between the each user and the corresponding event they participate in. \n",
    "#The above information about the distance is store in the main memory and not in the disk. So it;s a short-term memory. \n",
    "#Another query needs to be submitted if the this information is to be trasnfered to the disk\n",
    "#Since the info is in the memory, this information can be lost if the power is lost or the computer is restarted. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45d72692",
   "metadata": {},
   "source": [
    "Plot all the events on a map, as red circles. The size of the circle is\n",
    "proportional to the number of users who participate in the event.  Show the map.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 367,
   "id": "0326b529",
   "metadata": {},
   "outputs": [],
   "source": [
    "import folium\n",
    "from folium import plugins\n",
    "#this is the packet that allow maps to be added to python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 481,
   "id": "ba9ac9a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>e_ID</th>\n",
       "      <th>u_ID</th>\n",
       "      <th>topic</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>elat</th>\n",
       "      <th>elon</th>\n",
       "      <th>follower_ID</th>\n",
       "      <th>username</th>\n",
       "      <th>birthyear</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "      <th>distance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>Birthdays</td>\n",
       "      <td>15</td>\n",
       "      <td>6</td>\n",
       "      <td>-110.472</td>\n",
       "      <td>37.143</td>\n",
       "      <td>16</td>\n",
       "      <td>tammybee</td>\n",
       "      <td>1988</td>\n",
       "      <td>-106.191</td>\n",
       "      <td>38.125</td>\n",
       "      <td>12311.916142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>Wine</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>-76.095</td>\n",
       "      <td>34.374</td>\n",
       "      <td>20</td>\n",
       "      <td>ncarmona</td>\n",
       "      <td>1957</td>\n",
       "      <td>-81.484</td>\n",
       "      <td>39.377</td>\n",
       "      <td>12311.916142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>Beer</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>-98.970</td>\n",
       "      <td>33.534</td>\n",
       "      <td>18</td>\n",
       "      <td>crex</td>\n",
       "      <td>1988</td>\n",
       "      <td>-81.655</td>\n",
       "      <td>34.735</td>\n",
       "      <td>12311.916142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>Parties</td>\n",
       "      <td>10</td>\n",
       "      <td>12</td>\n",
       "      <td>-92.081</td>\n",
       "      <td>34.645</td>\n",
       "      <td>22</td>\n",
       "      <td>Jbarbosa</td>\n",
       "      <td>1961</td>\n",
       "      <td>-110.083</td>\n",
       "      <td>33.493</td>\n",
       "      <td>12311.916142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>Houses</td>\n",
       "      <td>14</td>\n",
       "      <td>17</td>\n",
       "      <td>-92.081</td>\n",
       "      <td>34.645</td>\n",
       "      <td>24</td>\n",
       "      <td>Jrex</td>\n",
       "      <td>1956</td>\n",
       "      <td>-110.083</td>\n",
       "      <td>33.493</td>\n",
       "      <td>12311.916142</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   e_ID  u_ID      topic  day  month     elat    elon  follower_ID  username  \\\n",
       "0    16    16  Birthdays   15      6 -110.472  37.143           16  tammybee   \n",
       "1    20    20       Wine    8      6  -76.095  34.374           20  ncarmona   \n",
       "2    18    18       Beer   11      2  -98.970  33.534           18      crex   \n",
       "3    22    22    Parties   10     12  -92.081  34.645           22  Jbarbosa   \n",
       "4    24    24     Houses   14     17  -92.081  34.645           24      Jrex   \n",
       "\n",
       "   birthyear      lat     lon      distance  \n",
       "0       1988 -106.191  38.125  12311.916142  \n",
       "1       1957  -81.484  39.377  12311.916142  \n",
       "2       1988  -81.655  34.735  12311.916142  \n",
       "3       1961 -110.083  33.493  12311.916142  \n",
       "4       1956 -110.083  33.493  12311.916142  "
      ]
     },
     "execution_count": 481,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "query = 'SELECT * '\n",
    "query += 'FROM user NATURAL JOIN participates NATURAL JOIN event '\n",
    "df = pd.read_sql_query(query, conn)\n",
    "df1.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 499,
   "id": "4efdd365",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n",
       "&lt;head&gt;    \n",
       "    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n",
       "    \n",
       "        &lt;script&gt;\n",
       "            L_NO_TOUCH = false;\n",
       "            L_DISABLE_3D = false;\n",
       "        &lt;/script&gt;\n",
       "    \n",
       "    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n",
       "    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n",
       "    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.6.0/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n",
       "    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n",
       "    &lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;\n",
       "    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.6.0/dist/leaflet.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n",
       "    \n",
       "            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n",
       "                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n",
       "            &lt;style&gt;\n",
       "                #map_3a37abce9c1f8af5809e3c61d837e82e {\n",
       "                    position: relative;\n",
       "                    width: 100.0%;\n",
       "                    height: 100.0%;\n",
       "                    left: 0.0%;\n",
       "                    top: 0.0%;\n",
       "                }\n",
       "            &lt;/style&gt;\n",
       "        \n",
       "&lt;/head&gt;\n",
       "&lt;body&gt;    \n",
       "    \n",
       "            &lt;div class=&quot;folium-map&quot; id=&quot;map_3a37abce9c1f8af5809e3c61d837e82e&quot; &gt;&lt;/div&gt;\n",
       "        \n",
       "&lt;/body&gt;\n",
       "&lt;script&gt;    \n",
       "    \n",
       "            var map_3a37abce9c1f8af5809e3c61d837e82e = L.map(\n",
       "                &quot;map_3a37abce9c1f8af5809e3c61d837e82e&quot;,\n",
       "                {\n",
       "                    center: [37.0902, -95.7129],\n",
       "                    crs: L.CRS.EPSG3857,\n",
       "                    zoom: 6,\n",
       "                    zoomControl: true,\n",
       "                    preferCanvas: false,\n",
       "                }\n",
       "            );\n",
       "\n",
       "            \n",
       "\n",
       "        \n",
       "    \n",
       "            var tile_layer_91df3546986b1e9c5e7b8fbe731c1fb4 = L.tileLayer(\n",
       "                &quot;https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n",
       "                {&quot;attribution&quot;: &quot;Data by \\u0026copy; \\u003ca href=\\&quot;http://openstreetmap.org\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e, under \\u003ca href=\\&quot;http://www.openstreetmap.org/copyright\\&quot;\\u003eODbL\\u003c/a\\u003e.&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "&lt;/script&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x29ac399a040>"
      ]
     },
     "execution_count": 499,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "folium_map = folium.Map(location=[37.0902, -95.7129], # USA coordinates\n",
    " zoom_start=6,\n",
    "tiles=\"openstreetmap\")\n",
    "folium_map\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 501,
   "id": "58f2884c",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n",
       "&lt;head&gt;    \n",
       "    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n",
       "    \n",
       "        &lt;script&gt;\n",
       "            L_NO_TOUCH = false;\n",
       "            L_DISABLE_3D = false;\n",
       "        &lt;/script&gt;\n",
       "    \n",
       "    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n",
       "    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n",
       "    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.6.0/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n",
       "    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n",
       "    &lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;\n",
       "    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.6.0/dist/leaflet.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n",
       "    \n",
       "            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n",
       "                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n",
       "            &lt;style&gt;\n",
       "                #map_3a37abce9c1f8af5809e3c61d837e82e {\n",
       "                    position: relative;\n",
       "                    width: 100.0%;\n",
       "                    height: 100.0%;\n",
       "                    left: 0.0%;\n",
       "                    top: 0.0%;\n",
       "                }\n",
       "            &lt;/style&gt;\n",
       "        \n",
       "&lt;/head&gt;\n",
       "&lt;body&gt;    \n",
       "    \n",
       "            &lt;div class=&quot;folium-map&quot; id=&quot;map_3a37abce9c1f8af5809e3c61d837e82e&quot; &gt;&lt;/div&gt;\n",
       "        \n",
       "&lt;/body&gt;\n",
       "&lt;script&gt;    \n",
       "    \n",
       "            var map_3a37abce9c1f8af5809e3c61d837e82e = L.map(\n",
       "                &quot;map_3a37abce9c1f8af5809e3c61d837e82e&quot;,\n",
       "                {\n",
       "                    center: [37.0902, -95.7129],\n",
       "                    crs: L.CRS.EPSG3857,\n",
       "                    zoom: 6,\n",
       "                    zoomControl: true,\n",
       "                    preferCanvas: false,\n",
       "                }\n",
       "            );\n",
       "\n",
       "            \n",
       "\n",
       "        \n",
       "    \n",
       "            var tile_layer_91df3546986b1e9c5e7b8fbe731c1fb4 = L.tileLayer(\n",
       "                &quot;https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n",
       "                {&quot;attribution&quot;: &quot;Data by \\u0026copy; \\u003ca href=\\&quot;http://openstreetmap.org\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e, under \\u003ca href=\\&quot;http://www.openstreetmap.org/copyright\\&quot;\\u003eODbL\\u003c/a\\u003e.&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var poly_line_37fb43cfb20c28afa8083880eb14c2f2 = L.polyline(\n",
       "                [[38.125, -106.191], [37.143, -110.472]],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.4, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 2}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var poly_line_3e2bc7d4f55d76c26c0dfb2cc1475c30 = L.polyline(\n",
       "                [[39.377, -81.484], [34.374, -76.095]],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.4, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 2}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var poly_line_f40bebea318b267d3be4fb90aa4a7bd5 = L.polyline(\n",
       "                [[34.735, -81.655], [33.534, -98.97]],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.4, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 2}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var poly_line_d201d71673cae5b5e76967d812ac982c = L.polyline(\n",
       "                [[33.493, -110.083], [34.645, -92.081]],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.4, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 2}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var poly_line_f90847cdecb55fa06851dcefde3abe5d = L.polyline(\n",
       "                [[33.493, -110.083], [34.645, -92.081]],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.4, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 2}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var circle_marker_e16d977289beabd1f80a0ebe793912da = L.circleMarker(\n",
       "                [38.125, -106.191],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 10, &quot;stroke&quot;: true, &quot;weight&quot;: 1}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var circle_marker_da54f3d189437dfcc2c708cadec49e43 = L.circleMarker(\n",
       "                [37.143, -110.472],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 10, &quot;stroke&quot;: true, &quot;weight&quot;: 1}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var circle_marker_5a1129b1b311887da53bfc567b704b3d = L.circleMarker(\n",
       "                [39.377, -81.484],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 10, &quot;stroke&quot;: true, &quot;weight&quot;: 1}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var circle_marker_d9effcf588c8a06f9832b4f91d09739b = L.circleMarker(\n",
       "                [34.374, -76.095],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 10, &quot;stroke&quot;: true, &quot;weight&quot;: 1}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var circle_marker_ac12ad3b2f169f6f21b0f7f70faa30f5 = L.circleMarker(\n",
       "                [34.735, -81.655],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 10, &quot;stroke&quot;: true, &quot;weight&quot;: 1}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var circle_marker_63bb913377ec5835942a488be407b8d8 = L.circleMarker(\n",
       "                [33.534, -98.97],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 10, &quot;stroke&quot;: true, &quot;weight&quot;: 1}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var circle_marker_01aa10ce9dd2bb46e9a70d4695a58f63 = L.circleMarker(\n",
       "                [33.493, -110.083],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 10, &quot;stroke&quot;: true, &quot;weight&quot;: 1}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var circle_marker_9a586da72af55b5c8e8a7ae106282d18 = L.circleMarker(\n",
       "                [34.645, -92.081],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 10, &quot;stroke&quot;: true, &quot;weight&quot;: 1}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var circle_marker_bcad2b25a75ccc36e5cef590a8a21344 = L.circleMarker(\n",
       "                [33.493, -110.083],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;red&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 10, &quot;stroke&quot;: true, &quot;weight&quot;: 1}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var circle_marker_8c0a006e08d4ab88163895803821bf1d = L.circleMarker(\n",
       "                [34.645, -92.081],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;green&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 10, &quot;stroke&quot;: true, &quot;weight&quot;: 1}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "&lt;/script&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x29ac399a040>"
      ]
     },
     "execution_count": 501,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for index, row in df1.iterrows ():\n",
    "\n",
    "   #size\n",
    "    \n",
    "   #radius= (row['topic'])/10 \n",
    "   zoom_start=6,\n",
    "  \n",
    "   #color\n",
    "   color1= 'red'\n",
    "   color2= 'blue'\n",
    "\n",
    "   # add marker to the map\n",
    "   folium.CircleMarker(location= (row['lon'], row['lat']), weight=1, radius= 10, \n",
    "             color=color, fill=True, fill_color= color1).add_to (folium_map)\n",
    "\n",
    "   folium.CircleMarker(location= (row['elon'], row['elat']), weight=1, radius= 10, \n",
    "             color=color, fill=True, fill_color= color2).add_to (folium_map)\n",
    "\n",
    "folium_map\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 500,
   "id": "d2ec71f3",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n",
       "&lt;head&gt;    \n",
       "    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n",
       "    \n",
       "        &lt;script&gt;\n",
       "            L_NO_TOUCH = false;\n",
       "            L_DISABLE_3D = false;\n",
       "        &lt;/script&gt;\n",
       "    \n",
       "    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n",
       "    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n",
       "    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.6.0/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n",
       "    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n",
       "    &lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;\n",
       "    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.6.0/dist/leaflet.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n",
       "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n",
       "    \n",
       "            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n",
       "                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n",
       "            &lt;style&gt;\n",
       "                #map_3a37abce9c1f8af5809e3c61d837e82e {\n",
       "                    position: relative;\n",
       "                    width: 100.0%;\n",
       "                    height: 100.0%;\n",
       "                    left: 0.0%;\n",
       "                    top: 0.0%;\n",
       "                }\n",
       "            &lt;/style&gt;\n",
       "        \n",
       "&lt;/head&gt;\n",
       "&lt;body&gt;    \n",
       "    \n",
       "            &lt;div class=&quot;folium-map&quot; id=&quot;map_3a37abce9c1f8af5809e3c61d837e82e&quot; &gt;&lt;/div&gt;\n",
       "        \n",
       "&lt;/body&gt;\n",
       "&lt;script&gt;    \n",
       "    \n",
       "            var map_3a37abce9c1f8af5809e3c61d837e82e = L.map(\n",
       "                &quot;map_3a37abce9c1f8af5809e3c61d837e82e&quot;,\n",
       "                {\n",
       "                    center: [37.0902, -95.7129],\n",
       "                    crs: L.CRS.EPSG3857,\n",
       "                    zoom: 6,\n",
       "                    zoomControl: true,\n",
       "                    preferCanvas: false,\n",
       "                }\n",
       "            );\n",
       "\n",
       "            \n",
       "\n",
       "        \n",
       "    \n",
       "            var tile_layer_91df3546986b1e9c5e7b8fbe731c1fb4 = L.tileLayer(\n",
       "                &quot;https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n",
       "                {&quot;attribution&quot;: &quot;Data by \\u0026copy; \\u003ca href=\\&quot;http://openstreetmap.org\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e, under \\u003ca href=\\&quot;http://www.openstreetmap.org/copyright\\&quot;\\u003eODbL\\u003c/a\\u003e.&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var poly_line_37fb43cfb20c28afa8083880eb14c2f2 = L.polyline(\n",
       "                [[38.125, -106.191], [37.143, -110.472]],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.4, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 2}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var poly_line_3e2bc7d4f55d76c26c0dfb2cc1475c30 = L.polyline(\n",
       "                [[39.377, -81.484], [34.374, -76.095]],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.4, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 2}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var poly_line_f40bebea318b267d3be4fb90aa4a7bd5 = L.polyline(\n",
       "                [[34.735, -81.655], [33.534, -98.97]],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.4, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 2}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var poly_line_d201d71673cae5b5e76967d812ac982c = L.polyline(\n",
       "                [[33.493, -110.083], [34.645, -92.081]],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.4, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 2}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "    \n",
       "            var poly_line_f90847cdecb55fa06851dcefde3abe5d = L.polyline(\n",
       "                [[33.493, -110.083], [34.645, -92.081]],\n",
       "                {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;blue&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: false, &quot;fillColor&quot;: &quot;blue&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;noClip&quot;: false, &quot;opacity&quot;: 0.4, &quot;smoothFactor&quot;: 1.0, &quot;stroke&quot;: true, &quot;weight&quot;: 2}\n",
       "            ).addTo(map_3a37abce9c1f8af5809e3c61d837e82e);\n",
       "        \n",
       "&lt;/script&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x29ac399a040>"
      ]
     },
     "execution_count": 500,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for index, row in df1.iterrows():\n",
    "  p1 = [row['lon'], row['lat']]\n",
    "  p2 = [row['elon'], row['elat']]\n",
    "  zoom_start=8,\n",
    "  folium.PolyLine(locations=[p1, p2], opacity=0.4, weight = 2, color='blue').add_to (folium_map)\n",
    "folium_map"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "10d027ee",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
